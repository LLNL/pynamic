<?xml encoding='UTF-8'?>
<report title="Developers overview" author="Pat Miller">

<section title="pyMPI 2.0">
<verbatim>
        - refactoring
        - new python2.2 style types (required)
        - "isatty" hook to remove dependency on "hacked driver"
        - new internal structure
        - "plugin" model
        - normalized names of externals and files
           - pyMPI_ for all external names
           - pyMPI_xxx.c for source code
           - pyMPI_Xxx.h for headers
           - Autogenerated pyMPI_Externals.h for prototypes
             and doc strings
        - new test framework
        - new doc framework
           - "doc box"
        - developer "style warnings"
        - split API into pyMPI.h (user accessable prototypes)
          and pyMPI_Macros.h (internal macros like PYCHECK)

</verbatim>
</section>

<section title=" configuration">
<verbatim>
        - new mpi.configuration module
        - contains all information that pyMPI_Config.h (autoconf) does
        - PYMPI_COMPILER
        - PYMPI_COMPILER_FLAGS
        - PYMPI_LINKER_FLAGS
        - version info
          - PYMPI_VERSION
          - PYMPI_MAJOR (e.g 1)
          - PYMPI_MINOR (e.g 3)
          - PYMPI_RELEASE (e.g. a2)
        - PYMPI_PREFIX
          - $PYMPI_PREFIX/lib/pyMPI$PYMPI_MAJOR.$PYMPI_MINOR contains
            1) augmentedMakefile (used by distutils)
            2) config.c (modified for readline and mpi)
            3) libpympi.a
            4) site-packages/ (install target for distutils)

</verbatim>
</section>

<section title=" distutils changes">
<verbatim>
        - updated for MPI support
        - defines "HAVE_MPI"
        - builds .so's for use with pyMPI (or derivatives)
        

</verbatim>
</section>
<section title=". User plugin">
<verbatim>
        - Extenders can define 6 functions
        - defaults in pyMPI_banner.c, pyMPI_user.c, and pyMPI_sitepackage.c
        - pyMPI_user_init(PyObject** docstring_pointer)
        - pyMPI_user_fini(void)
        - pyMPI_user_housekeeping(void)
        - char* pyMPI_sitepackage_directory(void)
        - void pyMPI_banner(char*,int)

</verbatim>
</section>
<section title=" AIX support">
<verbatim>
        - >>> prompt flushes so user input follows prompt
        - readline doesn't work (yet)
        - mp_isatty() used to determine if input is a tty which gets
          rid of background hangs and stupid python banners

</verbatim>
</section>
<section title="Configuration improvements">
<verbatim>
        - can build with mpKCC (any C++ that accepts .c extension)
        - no dependence on readline (caused configure hangs)

</verbatim>
</section>
<section title=" xml doc files">
<verbatim>
        - Grinding to PostScript with Python xml.sax and LOUT
</verbatim>
</section>
</report>