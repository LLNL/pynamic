# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#**************************************************************************#
#* FILE   **************         Makefile          ************************#
#**************************************************************************#
#* Author: Patrick Miller July 31 2002					  *#
#**************************************************************************#
#*                                                                        *#
#**************************************************************************#





srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = pyMPI$(EXEEXT)
noinst_PROGRAMS = pyMPI_linker$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
	$(noinst_HEADERS) $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/parallel_test.in $(srcdir)/pyMPI_Config.h.in \
	$(srcdir)/softload_setup.py.in $(top_srcdir)/configure \
	$(top_srcdir)/unittest/run-all-tests.in AUTHORS COPYING \
	ChangeLog INSTALL NEWS config.guess config.sub install-sh \
	missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = pyMPI_Config.h
CONFIG_CLEAN_FILES = unittest/run-all-tests softload_setup.py \
	parallel_test
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)" \
	"$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libpyMPI_a_AR = $(AR) $(ARFLAGS)
libpyMPI_a_LIBADD =
am_libpyMPI_a_OBJECTS = pyMPI_banner.$(OBJEXT) pyMPI_cart.$(OBJEXT) \
	pyMPI_configuration.$(OBJEXT) pyMPI_comm.$(OBJEXT) \
	pyMPI_comm_asynchronous.$(OBJEXT) \
	pyMPI_comm_collective.$(OBJEXT) pyMPI_comm_io.$(OBJEXT) \
	pyMPI_comm_map.$(OBJEXT) pyMPI_comm_message.$(OBJEXT) \
	pyMPI_comm_misc.$(OBJEXT) pyMPI_distutils.$(OBJEXT) \
	pyMPI_file.$(OBJEXT) pyMPI_init.$(OBJEXT) \
	pyMPI_initialize.$(OBJEXT) pyMPI_isatty.$(OBJEXT) \
	pyMPI_main.$(OBJEXT) pyMPI_pickle.$(OBJEXT) \
	pyMPI_pipes.$(OBJEXT) pyMPI_rco.$(OBJEXT) \
	pyMPI_readline.$(OBJEXT) pyMPI_recv.$(OBJEXT) \
	pyMPI_reductions.$(OBJEXT) pyMPI_request.$(OBJEXT) \
	pyMPI_signals.$(OBJEXT) pyMPI_site.$(OBJEXT) \
	pyMPI_send.$(OBJEXT) pyMPI_shared_file.$(OBJEXT) \
	pyMPI_status.$(OBJEXT) pyMPI_sysmods.$(OBJEXT) \
	pyMPI_user_banner.$(OBJEXT) pyMPI_user_directory.$(OBJEXT) \
	pyMPI_user_fini.$(OBJEXT) pyMPI_user_init.$(OBJEXT) \
	pyMPI_user_startup.$(OBJEXT) pyMPI_util.$(OBJEXT)
libpyMPI_a_OBJECTS = $(am_libpyMPI_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_pyMPI_OBJECTS = pyMPI.$(OBJEXT)
pyMPI_OBJECTS = $(am_pyMPI_OBJECTS)
pyMPI_DEPENDENCIES = libpyMPI.a
am_pyMPI_linker_OBJECTS = pyMPI_linker.$(OBJEXT)
pyMPI_linker_OBJECTS = $(am_pyMPI_linker_OBJECTS)
pyMPI_linker_LDADD = $(LDADD)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) 
SOURCES = $(libpyMPI_a_SOURCES) $(pyMPI_SOURCES) \
	$(pyMPI_linker_SOURCES)
DIST_SOURCES = $(libpyMPI_a_SOURCES) $(pyMPI_SOURCES) \
	$(pyMPI_linker_SOURCES)
dataDATA_INSTALL = $(INSTALL_DATA)
DATA = $(data_DATA)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AIX_DYNAMIC_LOAD_FALSE = @AIX_DYNAMIC_LOAD_FALSE@
AIX_DYNAMIC_LOAD_TRUE = @AIX_DYNAMIC_LOAD_TRUE@
AIX_PYMPI_EXP_FLAG = @AIX_PYMPI_EXP_FLAG@
AIX_PYMPI_EXP_FLAG_LONG = @AIX_PYMPI_EXP_FLAG_LONG@
AIX_PYTHON_EXP_FLAG = @AIX_PYTHON_EXP_FLAG@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LOCAL_PROCESSORS = @LOCAL_PROCESSORS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MPIRUN = @MPIRUN@
MPIRUNEXE = @MPIRUNEXE@
MVRUN = @MVRUN@
NOPOE = @NOPOE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POE = @POE@
PYINCLUDEDIR = @PYINCLUDEDIR@
PYLIBCONFIGDIR = @PYLIBCONFIGDIR@
PYLIBCONFIG_C = @PYLIBCONFIG_C@
PYLIBDIR = @PYLIBDIR@
PYLIBMAKEFILE = @PYLIBMAKEFILE@
PYMPI_BADCANCEL = @PYMPI_BADCANCEL@
PYMPI_ISATTY = @PYMPI_ISATTY@
PYMPI_MAJOR = @PYMPI_MAJOR@
PYMPI_MINOR = @PYMPI_MINOR@
PYMPI_PROMPT_NL = @PYMPI_PROMPT_NL@
PYMPI_RELEASE = @PYMPI_RELEASE@
PYMPI_VERSION_NAME = @PYMPI_VERSION_NAME@
PYMPI_VERSION_SHORT = @PYMPI_VERSION_SHORT@
PYNAMICLIBS = @PYNAMICLIBS@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = $(libdir)
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = ${prefix}/include/@PACKAGE@$(version)
infodir = @infodir@
install_sh = @install_sh@
libdir = ${prefix}/lib/@PACKAGE@$(version)
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
pyBASEMODLIBS = @pyBASEMODLIBS@
pyBLDSHARED = @pyBLDSHARED@
pyCC = @pyCC@
pyCCSHARED = @pyCCSHARED@
pyCFLAGS = @pyCFLAGS@
pyINCLUDEPY = @pyINCLUDEPY@
pyLDFLAGS = @pyLDFLAGS@
pyLDLAST = @pyLDLAST@
pyLDSHARED = @pyLDSHARED@
pyLIBS = @pyLIBS@
pyLINKFORSHARED = @pyLINKFORSHARED@
pyLOCALMODLIBS = @pyLOCALMODLIBS@
pyOPT = @pyOPT@
pyVERSION = @pyVERSION@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = no-dependencies
version = @PYMPI_MAJOR@.@PYMPI_MINOR@
sitedir = ${libdir}/site-packages

#-----------------------------------------------
# To avoid link order issues, we use a special
# linker helper program that sticks -L and -l
# flags to the end of a link
#-----------------------------------------------
pyMPI_linker_SOURCES = pyMPI_linker.c
pyMPI_SOURCES = \
    pyMPI.c

pyMPI_LDADD = -L. libpyMPI.a @AIX_PYMPI_EXP_FLAG@ @LDFLAGS@
libpyMPI_a_SOURCES = \
    pyMPI_banner.c \
    pyMPI_cart.c \
    pyMPI_configuration.c \
    pyMPI_comm.c \
    pyMPI_comm_asynchronous.c \
    pyMPI_comm_collective.c \
    pyMPI_comm_io.c \
    pyMPI_comm_map.c \
    pyMPI_comm_message.c \
    pyMPI_comm_misc.c \
    pyMPI_distutils.c \
    pyMPI_file.c \
    pyMPI_init.c \
    pyMPI_initialize.c \
    pyMPI_isatty.c \
    pyMPI_main.c \
    pyMPI_pickle.c \
    pyMPI_pipes.c \
    pyMPI_rco.c \
    pyMPI_readline.c \
    pyMPI_recv.c \
    pyMPI_reductions.c \
    pyMPI_request.c \
    pyMPI_signals.c \
    pyMPI_site.c \
    pyMPI_send.c \
    pyMPI_shared_file.c \
    pyMPI_status.c \
    pyMPI_sysmods.c \
    pyMPI_user_banner.c \
    pyMPI_user_directory.c \
    pyMPI_user_fini.c \
    pyMPI_user_init.c \
    pyMPI_user_startup.c \
    pyMPI_util.c 

bin_SCRIPTS = @PACKAGE@$(version)$(EXEEXT) pyMPI$(version)_linker$(EXEEXT)
lib_LIBRARIES = libpyMPI.a
data_DATA = augmentedMakefile pyMPI.exp
AM_CFLAGS = @CFLAGS@

#-----------------------------------------------
# Distribution control
#-----------------------------------------------
noinst_HEADERS = \
    mpicomm.h

EXTRA_DIST = \
	parallel_test \
	pyMPI_softload.c \
	softload_setup.py.in \
	LICENSE.TXT \
	advanced_extension/advanced.c \
		advanced_extension/setup.py \
		advanced_extension/test.py \
	benchmarks/benchmark.py \
		benchmarks/cbenchmark.c \
	cloning_pyMPI/conan.c \
		cloning_pyMPI/Makefile \
	docs/Makefile \
		docs/README \
		docs/pyMPI.pdf \
		docs/developers_guidance.xml \
		docs/developers_overview.xml \
		docs/extenders_guide.xml \
		docs/how_it_works.xml \
		docs/overview.xml \
		docs/xml2ps.py \
	examples/fractal.py \
	micro_tests/pyMPI_default_test \
	scaling/allreduce.py \
		scaling/pingpong.c \
		scaling/pingpongtest.py \
		scaling/setup.py \
	simple_extension/setup.py \
		simple_extension/simple.c \
		simple_extension/test.py \
	swig_example/example.i \
		swig_example/examplecode.c \
		swig_example/setup.py \
		swig_example/test.py \
	unittest/PyMPITest.py \
		unittest/extension.py \
		unittest/gathers.py \
		unittest/popen.py \
		unittest/reduces.py \
		unittest/run-all-tests.in \
		unittest/scatters.py \
	utils/checkdistribution.py \
		utils/crontest \
		utils/editMakefile.py \
		utils/expose_configuration.py \
		utils/findExternals.py \
		utils/grind_docs_and_prototypes.py

header_files = pyMPI.h pyMPI_Macros.h pyMPI_Types.h  pyMPI_Externals.h
include_HEADERS = initmpi.h $(header_files) pyMPI_Config.h
DASHL = `echo @LIBS@ | tr ' ' '\012' | egrep '^-(l|L)'`
NOT_DASHL = `echo @LIBS@ | tr ' ' '\012' | egrep -v '^-(l|L)'`
CLEANFILES = augmentedMakefile pyMPI.exp \
	pyMPI_configuration.c \
	extensiontest.* \
	pynamic-pyMPI$(EXEEXT) \
	pyMPI$(version)$(EXEEXT) \
	pyMPI$(version)_linker$(EXEEXT) \
	pyMPI_linker$(EXEEXT) \
	debug \
	pyMPI_Externals.h \
	pyMPI.exp 


#-----------------------------------------------
# Make sure tests are run with the newly
# compiled pyMPI
#-----------------------------------------------
TESTS_ENVIRONMENT = PATH=.:$$PATH
TESTS = \
	micro_tests/pyMPI_*

all: pyMPI_Config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh:
	@:
#$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#	@for dep in $?; do \
#	  case '$(am__configure_deps)' in \
#	    *$$dep*) \
#	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
#	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
#		&& exit 0; \
#	      exit 1;; \
#	  esac; \
#	done; \
#	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
#	cd $(top_srcdir) && \
#	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

#$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
#	$(SHELL) ./config.status --recheck
#
#$(top_srcdir)/configure:  $(am__configure_deps)
#	cd $(srcdir) && $(AUTOCONF)
#$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
#	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

pyMPI_Config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/pyMPI_Config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status pyMPI_Config.h
$(srcdir)/pyMPI_Config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f pyMPI_Config.h stamp-h1
unittest/run-all-tests: $(top_builddir)/config.status $(top_srcdir)/unittest/run-all-tests.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
softload_setup.py: $(top_builddir)/config.status $(srcdir)/softload_setup.py.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
parallel_test: $(top_builddir)/config.status $(srcdir)/parallel_test.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libpyMPI.a: $(libpyMPI_a_OBJECTS) $(libpyMPI_a_DEPENDENCIES) 
	-rm -f libpyMPI.a
	$(libpyMPI_a_AR) libpyMPI.a $(libpyMPI_a_OBJECTS) $(libpyMPI_a_LIBADD)
	$(RANLIB) libpyMPI.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done
	rm -f lib*

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
pyMPI$(EXEEXT): $(pyMPI_OBJECTS) $(pyMPI_DEPENDENCIES) 
	@rm -f pyMPI$(EXEEXT)
	@rm -f pynamic-pyMPI$(EXEEXT)
	$(LINK) -o $@ $(pyMPI_LDFLAGS) $(pyMPI_OBJECTS) $(pyMPI_LDADD) $(LIBS)
	$(LINK) -o pynamic-pyMPI$(EXEEXT) $(pyMPI_LDFLAGS) $(pyMPI_OBJECTS) $(pyMPI_LDADD) $(LIBS) $(PYNAMICLIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(datadir)" || $(mkdir_p) "$(DESTDIR)$(datadir)"
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(dataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(datadir)/$$f'"; \
	  $(dataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(datadir)/$$f"; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(datadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(datadir)/$$f"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) pyMPI_Config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) pyMPI_Config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) pyMPI_Config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) pyMPI_Config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/. $(distdir)/advanced_extension $(distdir)/benchmarks $(distdir)/cloning_pyMPI $(distdir)/docs $(distdir)/examples $(distdir)/micro_tests $(distdir)/scaling $(distdir)/simple_extension $(distdir)/swig_example $(distdir)/unittest $(distdir)/utils
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS) pyMPI_Config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(datadir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
	-rm -f lib*
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local install-dataDATA \
	install-includeHEADERS

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dataDATA uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local clean-noinstPROGRAMS ctags dist dist-all \
	dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-data-local install-dataDATA \
	install-exec install-exec-am install-includeHEADERS \
	install-info install-info-am install-libLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-dataDATA \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES


install-data-local: softload_setup.py
	$(mkinstalldirs) $(DESTDIR)$(sitedir)
	-$(PYTHON) softload_setup.py install --install-lib=$(DESTDIR)$(sitedir)
pyMPI_linker.$(OBJEXT): pyMPI_linker.c
	@pyCC@ -c $(srcdir)/pyMPI_linker.c
pyMPI_linker$(EXEEXT): $(pyMPI_linker_OBJECTS)
	@pyCC@ -o pyMPI_linker$(EXEEXT) $(pyMPI_linker_OBJECTS)

$(pyMPI_OBJECTS): pyMPI_Externals.h

$(libpyMPI_a_OBJECTS): pyMPI_Externals.h

#-----------------------------------------------
# Skip updating the externals.h include file
#-----------------------------------------------
.PHONY: fast
fast:
	touch pyMPI_Externals.h
	sleep 1
	touch $(libpyMPI_a_OBJECTS)
	$(RM) -f $(KILL)
	$(MAKE)

#-----------------------------------------------
# This exposes the values from pyMPI_Config.h
# to python
#-----------------------------------------------
pyMPI_configuration.c: pyMPI_Config.h utils/expose_configuration.py
	$(RM) -f pyMPI_configuration.c
	$(PYTHON) $(srcdir)/utils/expose_configuration.py pyMPI_Config.h > pyMPI_configuration.c
	chmod -w pyMPI_configuration.c

#-----------------------------------------------
# Developers only:
# It is easy to forget new CVS files, run
# make dist check_extra_dist to see what files
# are missing.
#-----------------------------------------------
.PHONY: check_extra_dist
check_extra_dist:
	$(PYTHON) $(srcdir)/utils/checkdistribution.py $(distdir).tar.gz $(EXTRA_DIST)

pyMPI$(version)$(EXEEXT): pyMPI$(EXEEXT)
	cp pyMPI$(EXEEXT) pyMPI$(version)$(EXEEXT)

pyMPI$(version)_linker$(EXEEXT): pyMPI_linker$(EXEEXT)
	cp pyMPI_linker$(EXEEXT) pyMPI$(version)_linker$(EXEEXT)

#-----------------------------------------------
# Be sure to use up to date pyMPI_Externals.h
# and extras (micro_test/*)
#-----------------------------------------------
dist-local: pyMPI_Externals.h

pyMPI_Externals.h: $(libpyMPI_a_SOURCES) pyMPI_Types.h utils/grind_docs_and_prototypes.py
	rm -f pyMPI_Externals.h
	$(PYTHON) $(srcdir)/utils/grind_docs_and_prototypes.py $(srcdir) $(libpyMPI_a_SOURCES) pyMPI_Types.h > pyMPI_Externals.h
	chmod -w pyMPI_Externals.h

#-----------------------------------------------
# Updated Makefile for distutils to look at
#-----------------------------------------------
augmentedMakefile: @PYLIBMAKEFILE@ Makefile
	rm -f augmentedMakefile
	$(PYTHON) $(srcdir)/utils/editMakefile.py < @PYLIBMAKEFILE@ CC @CC@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py CXX @CXX@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py OPT -DHAVE_MPI @CPPFLAGS@ @CFLAGS@ @pyOPT@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py LIBS $(DASHL) @AIX_PYMPI_EXP_FLAG_LONG@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py LINKFORSHARED  @pyLINKFORSHARED@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py LDSHARED       ${bindir}/pyMPI$(version)_linker$(EXEEXT) @pyLDSHARED@ | \
		$(PYTHON) $(srcdir)/utils/editMakefile.py BLDSHARED      ${bindir}/pyMPI$(version)_linker$(EXEEXT) @pyBLDSHARED@ \
	>> augmentedMakefile

#--------------------------------------------------
# Just a target to echo the name of the .tgz distro
#--------------------------------------------------
.PHONY: distro
distro:
	@echo $(distdir).tar.gz

clean-local:
	-rm -rf build micro_tests/pyMPI_*[0-9]
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
